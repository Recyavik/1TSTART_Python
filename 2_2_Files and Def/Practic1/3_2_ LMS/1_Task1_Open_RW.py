# r     Открывает файл только для чтения. Указатель стоит в начале файла.

# r+    Открывает файл для чтения и записи. Указатель стоит в начале файла.

# w     Открывает файл только для записи. Указатель стоит в начале файла.
# Создает файл с именем имя_файла, если такового не существует.

# w+    Открывает файл для чтения и записи. Указатель стоит в начале файла.
# Создает файл с именем имя_файла, если такового не существует.

# a     Открывает файл для добавления информации в файл. Указатель стоит в конце файла.
# Создает файл с именем имя_файла, если такового не существует.

# a+    Открывает файл для добавления и чтения. Указатель стоит в конце файла.
# Создает файл с именем имя_файла, если такового не существует.

# my_file = open(имя_файла [, режим_доступа][, буферизация])
# Буферизация: Целое число. Если значение аргумента указано 0 — файл открывается без буферизации,
# 1 — с построчной буферизацией, больше одного процесс буферизации выполняется с указанным размером буфера.
# Отрицательное число — размер буфера будет равен системному.

my_file = open("../some.txt", "w")
# file.closed - Возвращает True, если файл был закрыт.
# file.mode - Возвращает режим доступа, с которым был открыт файл.
# file.name - Возвращает имя файла.

print("Имя файла: ", my_file.name)
print("Файл закрыт: ", my_file.closed)
print("В каком режиме файл открыт: ", my_file.mode)

my_file.close()
print("А теперь закрыт: ", my_file.closed)

# my_file.write(string)
# Метод write() записывает любую строку в открытый файл.
# Важно помнить, что строки в Python могут содержать двоичные данные, а не только текст.
# Метод write() не добавляет символ переноса строки ('\n') в конец файла.

# Метод read([count]) читает строку из открытого файла.
# Необязательный параметр count — это количество байт, которые следует прочитать из открытого файла.
# Этот метод читает информацию с начала файла и, если параметр count не указан, до конца файла.

my_file = open("../some.txt", "w")
my_file.write("Добро пожаловать!\nПриветствуем вас!")
my_file.close()


my_file = open("../some.txt", "r", )
my_string = my_file.read()
print("Было прочитано:")
print(my_string)

my_file.close()

# my_file.tell() - Возвращает позицию считывания.
# my_file.seek(offset, [from]) - Перейти на позицию считывания
# Опциональный аргумент from означает позицию, с которой начинается движение.
# 0 — означает начало файла, 1 — нынешняя позиция, 2 — конец файла.

my_file = open("../some.txt", "r")
print(my_file.read(10))
print("Мы находимся на позиции: ", my_file.tell())

# Возвращаемся в начало
my_file.seek(0)
print(my_file.read(10))
my_file.close()


my_file = open("../some.txt", 'w')
my_file.write("Привет друзья!")
my_file.close()
# Оставит существующую информацию в some.csv и добавит "Hello".
my_file = open("../some.txt", 'a')
my_file.write("Мы рады видеть вас!")
my_file.close()