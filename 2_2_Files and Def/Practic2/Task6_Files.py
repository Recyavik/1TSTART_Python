# Обратите внимание, что для записи сложных структур данных, таких как списки и словари,
# может быть полезно использовать специальные форматы, такие как JSON или CSV,
# которые предоставляют набор правил для представления структурированных данных в виде текста.
# В Python для работы с этими форматами существуют встроенные модули, такие как `json` и `csv`.

import csv

# Файл CSV – это особый вид файла, который позволяет структурировать большие объемы данных.
# По сути, он является обычным текстовым файлом, однако каждый новый элемент отделен от предыдущего запятой
# или другим разделителем. Обычно каждая запись начинается с новой строки. Данные CSV можно легко экспортировать
# в электронные таблицы или базы данных. Программист может расширять CSV файл, добавляя новые строки.

with open('some.csv', encoding='utf-8') as file:
    data = csv.reader(file, delimiter=",")
    for row in data:
        print(row)

# Вместо запятой можно использовать любой другой разделитель, поэтому при чтении CSV файла нужно заранее знать,
# какой символ используется.
# Важно помнить, что CSV – это обычный текстовый файл, который не поддерживает символы в кодировках,
# отличающихся от ASCII или Unicode.
# Расширим функциональные возможности считывания файла:

with open("some.csv", encoding='utf-8') as file:
    # Создаем объект reader, указываем символ-разделитель ","
    data = csv.reader(file, delimiter = ",")
    # Счетчик для подсчета количества строк и вывода заголовков столбцов
    count = 0
    # Считывание данных из CSV файла
    for row in data:
        if count == 0:
            # Вывод строки, содержащей заголовки для столбцов
            print(f'Файл содержит столбцы: {", ".join(row)}')
        else:
            # Вывод строк
            print(f'    {row[0]} - {row[1]} и он родился в {row[2]} году.')
        count += 1
    print(f'Всего в файле {count} строк.')


# Для записи информации в CSV файл необходимо создать объект writer:
import csv
with open("classmates.csv", mode="w", encoding='utf-8') as file:
    data_writer = csv.writer(file, delimiter = ",", lineterminator="\r")
    data_writer.writerow(["Имя", "Класс", "Возраст"])
    data_writer.writerow(["Женя", "8", "14"])
    data_writer.writerow(["Саша", "9", "15"])
    data_writer.writerow(["Маша", "11", "18"])
# Обратите внимание, что при записи использовался, lineterminator="\r".
# Это разделитель между строками таблицы, по умолчанию он "\r\n".

import csv

# Запись в файл также может быть осуществлена с помощью объекта DictWriter.
# Важно помнить, что он требует явного указания параметра fieldnames.
# В качестве аргумента метода writerow используется словарь.
with open("classmates2.csv", mode="w", encoding='utf-8') as file:
    names = ["Имя", "Возраст"]
    data_writer = csv.DictWriter(file, delimiter=",",
                                 lineterminator="\r", fieldnames=names)
    data_writer.writeheader()
    data_writer.writerow({"Имя": "Глаша", "Возраст": "14"})
    data_writer.writerow({"Имя": "Тома", "Возраст": "15"})
    data_writer.writerow({"Имя": "Вова", "Возраст": "16"})


    